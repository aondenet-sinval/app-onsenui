const dbNameVendas="registroVendas";const createBase=()=>{window.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;if(!window.indexedDB){alert("Seu navegador não suporta o recurso IndexedDB. Atualize para usar o sistema de vendas.")}const request=indexedDB.open(dbNameVendas,3);request.onupgradeneeded=function(event){const db=event.target.result;const objectStore=db.createObjectStore("vendas",{keyPath:"id",autoIncrement:true});objectStore.createIndex("codigo","codigo",{unique:false});objectStore.createIndex("qtde","qtde",{unique:false});objectStore.createIndex("preco","preco",{unique:false});objectStore.createIndex("subtotal","subtotal",{unique:false});const objectStoreEstoque=db.createObjectStore("estoque",{keyPath:"codigo"});objectStoreEstoque.createIndex("codigo","codigo",{unique:true});objectStoreEstoque.createIndex("qtde","qtde",{unique:false});objectStoreEstoque.createIndex("preco","preco",{unique:false})}};let produtosEstoque;const changeValueEstoque=()=>{let codigoProduto=document.getElementById("codigo-estoque");let qtdeProduto=document.getElementById("qtde-estoque");let precoProduto=document.getElementById("preco_un-estoque");const cod=Number(codigoProduto.value);const qt=Number(qtdeProduto.value);const pr=Number(precoProduto.value);if(cod&&qt&&pr>0){produtosEstoque={codigo:cod,qtde:qt,preco:pr}}};let codigoForDelEstoque;const changeDelEstoque=()=>{const codigoEstoque=document.getElementById("codigo-del-estoque");codigoForDelEstoque=Number(codigoEstoque.value);console.log("codigoForDelEstoque ",codigoEstoque)};let produtos;const changeValue=()=>{let codigoProduto=document.getElementById("codigo");let qtdeProduto=document.getElementById("qtde");let precoProduto=document.getElementById("preco_un");const cod=Number(codigoProduto.value);const qt=Number(qtdeProduto.value);const pr=Number(precoProduto.value);let sbt=Number(qt*pr);sbt=sbt.toFixed(2);if(cod&&qt&&pr>0){produtos={codigo:cod,qtde:qt,preco:pr,subtotal:sbt}}};let idForUpdate,nameUpdate,valueUpdate;const changeUpdate=()=>{let idUpdate=document.getElementById("update-id");let nameUp=document.getElementById("update-name");let valueUp=document.getElementById("update-value");idForUpdate=Number(idUpdate.value);nameUpdate=nameUp.value;valueUpdate=Number(valueUp.value)};let idForDel;const changeDel=()=>{let idProduto=document.getElementById("chave");idForDel=Number(idProduto.value)};const cadastrarEstoque=()=>{const request=indexedDB.open(dbNameVendas,3);request.onsuccess=function(event){const db=request.result;const transaction=db.transaction(["estoque"],"readwrite");const objectStore=transaction.objectStore("estoque");try{objectStore.add(produtosEstoque);transaction.oncomplete=function(event){const message=`Estoque cadastrado.`;showMessage("strong","estoque-message",message,3e3)}}catch(e){const message=`Erro ao cadastrar no estoque.
      Preencha os dados: código(único/exclusivo), quantidade e preço.`;showMessage("strong","estoque-message",message,5e3)}}};const cadastrarVenda=()=>{const request=indexedDB.open(dbNameVendas,3);request.onsuccess=function(event){const db=request.result;const transaction=db.transaction(["vendas"],"readwrite");const objectStore=transaction.objectStore("vendas");try{objectStore.add(produtos);const codigo=produtos.codigo;const estoqueQtde=produtos.qtde;updateEstoque(codigo,estoqueQtde);transaction.oncomplete=function(event){const message=`Venda cadastrada.`;showMessage("strong","venda-message",message,3e3)}}catch(e){const message=`Erro ao cadastrar a venda.
      Preencha os dados: código, quantidade e preço.`;showMessage("strong","venda-message",message,5e3)}}};const apagarEstoque=()=>{const request=indexedDB.open(dbNameVendas,3);request.onsuccess=function(event){const db=request.result;try{const transaction=db.transaction(["estoque"],"readwrite").objectStore("estoque").delete(codigoForDelEstoque);transaction.onsuccess=function(event){const message=`Produto removido do estoque.`;showMessage("strong","cancelar-codigo",message,5e3)}}catch(e){const message=`Insira um código válido.`;showMessage("strong","cancelar-codigo",message,5e3)}}};const apagarVenda=()=>{const request=indexedDB.open(dbNameVendas,3);request.onsuccess=function(event){const db=request.result;try{const transaction=db.transaction(["vendas"],"readwrite").objectStore("vendas").delete(idForDel);transaction.onsuccess=function(event){const message=`Registro de venda removido.`;showMessage("strong","cancelar-venda",message,5e3)}}catch(e){const message=`Insira um Id válido.`;showMessage("strong","cancelar-venda",message,5e3)}}};const buscarEstoque=()=>{const request=indexedDB.open(dbNameVendas,3);request.onsuccess=function(event){const db=request.result;const transaction=db.transaction(["estoque"]);const objectStore=transaction.objectStore("estoque");const reqAll=objectStore.getAll();reqAll.onsuccess=function(event){const resultVendas=reqAll.result;const prods=resultVendas.reverse();const elemento=document.getElementById("lista-estoque");while(elemento.firstChild){elemento.removeChild(elemento.firstChild)}let joinSubtotal=[];for(var i=0;i<prods.length;i++){joinSubtotal.push(prods[i].qtde*prods[i].preco.toFixed(2));let message=`Codigo ${prods[i].codigo} -
        Qtde ${prods[i].qtde} - Preço de venda R$ ${prods[i].preco.toFixed(2)}`;showMessage("li","lista-estoque",message)}}}};const buscarVendas=()=>{const request=indexedDB.open(dbNameVendas,3);request.onsuccess=function(event){const db=request.result;const transaction=db.transaction(["vendas"]);const objectStore=transaction.objectStore("vendas");const reqAll=objectStore.getAll();reqAll.onsuccess=function(event){const resultVendas=reqAll.result;const prods=resultVendas.reverse();const elemento=document.getElementById("vendidos");while(elemento.firstChild){elemento.removeChild(elemento.firstChild)}let joinSubtotal=[];for(var i=0;i<prods.length;i++){let newArray=Number(prods[i].subtotal);joinSubtotal.push(newArray);console.log("joinSubtotal ",joinSubtotal);let preco=prods[i].preco.toFixed(2);let subtotal=prods[i].subtotal;let message=`ID: ${prods[i].id} - Codigo ${prods[i].codigo} -
        Qtde ${prods[i].qtde} - Preço ${new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(preco)} -
        subtotal ${new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(subtotal)}`;showMessage("li","vendidos",message)}const elem=document.getElementById("total-vendas");while(elem.firstChild){elem.removeChild(elem.firstChild)}const total=joinSubtotal.reduce((a,b)=>a+b);const message=`Total de vendas: ${new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(total)}`;showMessage("strong","total-vendas",message)}}};const updateEstoque=(codigo,subtracao)=>{const request=indexedDB.open(dbNameVendas,3);request.onsuccess=function(event){const db=request.result;const objectStore=db.transaction(["estoque"],"readwrite").objectStore("estoque");if(codigo&&subtracao){const req=objectStore.get(codigo);req.onsuccess=function(event){const data=req.result;const newQtde=data.qtde-subtracao;data.qtde=newQtde;const requestUpdate=objectStore.put(data);requestUpdate.onerror=function(event){};requestUpdate.onsuccess=function(event){}}}else{const message=`Erro na atualização do estoque.`;showMessage("strong","venda-message",message,5e3)}}};const updateVenda=()=>{const request=indexedDB.open(dbNameVendas,3);request.onsuccess=function(event){const db=request.result;const objectStore=db.transaction(["vendas"],"readwrite").objectStore("vendas");if(idForUpdate&&nameUpdate){const req=objectStore.get(idForUpdate);req.onsuccess=function(event){const data=req.result;if(nameUpdate==="qtde"){data.qtde=valueUpdate}if(nameUpdate==="preco"){data.preco=valueUpdate}const requestUpdate=objectStore.put(data);requestUpdate.onerror=function(event){};requestUpdate.onsuccess=function(event){}}}else{const message=`Informe os campos. Exemplo:
      codigo, preco ou qtde.`;showMessage("strong","update-message",message,5e3)}}};const showMessage=(element,parent,message,timeMessage)=>{const nodeMessage=document.createElement(element);const textNodeMessage=document.createTextNode(message);nodeMessage.appendChild(textNodeMessage);document.getElementById(parent).appendChild(nodeMessage);if(timeMessage!==undefined){setTimeout(()=>{const elemento=document.getElementById(parent);while(elemento.firstChild){elemento.removeChild(elemento.firstChild)}},timeMessage)}};const hideVendas=()=>{const elemento=document.getElementById("vendidos");while(elemento.firstChild){elemento.removeChild(elemento.firstChild)}const elementoTotal=document.getElementById("total-vendas");while(elementoTotal.firstChild){elementoTotal.removeChild(elementoTotal.firstChild)}};const hideEstoque=()=>{const elemento=document.getElementById("lista-estoque");while(elemento.firstChild){elemento.removeChild(elemento.firstChild)}};const clearVendas=()=>{const DBOpenRequest=window.indexedDB.open("registroVendas",3);DBOpenRequest.onsuccess=event=>{db=DBOpenRequest.result;clearData()};function clearData(){const transaction=db.transaction(["vendas"],"readwrite");transaction.oncomplete=event=>{};transaction.onerror=event=>{};const objectStore=transaction.objectStore("vendas");const objectStoreRequest=objectStore.clear();objectStoreRequest.onsuccess=event=>{}}};